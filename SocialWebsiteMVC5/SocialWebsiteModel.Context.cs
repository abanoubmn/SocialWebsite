//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialWebsiteMVC5
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SocialWebsiteEntities : DbContext
    {
        public SocialWebsiteEntities()
            : base("name=SocialWebsiteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Friend> Friends { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<ProfilePicture> ProfilePictures { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
    
        public virtual int AcceptRequest(Nullable<System.Guid> requestedId, string requesterUsername)
        {
            var requestedIdParameter = requestedId.HasValue ?
                new ObjectParameter("requestedId", requestedId) :
                new ObjectParameter("requestedId", typeof(System.Guid));
    
            var requesterUsernameParameter = requesterUsername != null ?
                new ObjectParameter("requesterUsername", requesterUsername) :
                new ObjectParameter("requesterUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AcceptRequest", requestedIdParameter, requesterUsernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckLike(Nullable<System.Guid> accountId, Nullable<int> postId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(System.Guid));
    
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckLike", accountIdParameter, postIdParameter);
        }
    
        public virtual int DeleteLike(Nullable<System.Guid> accountId, Nullable<int> postId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(System.Guid));
    
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLike", accountIdParameter, postIdParameter);
        }
    
        public virtual int DeletePost(Nullable<int> postId, Nullable<System.Guid> accountId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePost", postIdParameter, accountIdParameter);
        }
    
        public virtual int EditPost(Nullable<int> postId, Nullable<System.Guid> accountId, string postContent)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(System.Guid));
    
            var postContentParameter = postContent != null ?
                new ObjectParameter("postContent", postContent) :
                new ObjectParameter("postContent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditPost", postIdParameter, accountIdParameter, postContentParameter);
        }
    
        public virtual ObjectResult<GetAllPosts_Result> GetAllPosts(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPosts_Result>("GetAllPosts", idParameter);
        }
    
        public virtual ObjectResult<GetComments_Result> GetComments(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComments_Result>("GetComments", postIdParameter);
        }
    
        public virtual ObjectResult<GetFriendList_Result> GetFriendList(Nullable<System.Guid> accountID)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("accountID", accountID) :
                new ObjectParameter("accountID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFriendList_Result>("GetFriendList", accountIDParameter);
        }
    
        public virtual ObjectResult<GetLikers_Result> GetLikers(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLikers_Result>("GetLikers", postIdParameter);
        }
    
        public virtual ObjectResult<GetProfileData_Result> GetProfileData(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfileData_Result>("GetProfileData", idParameter);
        }
    
        public virtual int InsertLike(Nullable<System.Guid> accountId, Nullable<int> postId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(System.Guid));
    
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLike", accountIdParameter, postIdParameter);
        }
    
        public virtual ObjectResult<InsertPost_Result> InsertPost(Nullable<System.Guid> accountId, string content, Nullable<System.DateTime> dateCreate)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(System.Guid));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("dateCreate", dateCreate) :
                new ObjectParameter("dateCreate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertPost_Result>("InsertPost", accountIdParameter, contentParameter, dateCreateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LikesCount(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LikesCount", postIdParameter);
        }
    
        public virtual int RejectRequest(Nullable<System.Guid> requestedId, string requesterUsername)
        {
            var requestedIdParameter = requestedId.HasValue ?
                new ObjectParameter("requestedId", requestedId) :
                new ObjectParameter("requestedId", typeof(System.Guid));
    
            var requesterUsernameParameter = requesterUsername != null ?
                new ObjectParameter("requesterUsername", requesterUsername) :
                new ObjectParameter("requesterUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RejectRequest", requestedIdParameter, requesterUsernameParameter);
        }
    
        public virtual ObjectResult<SearchAccounts_Result> SearchAccounts(string name, Nullable<System.Guid> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchAccounts_Result>("SearchAccounts", nameParameter, idParameter);
        }
    }
}
